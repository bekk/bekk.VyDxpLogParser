@page
@model IndexModel

@{
    ViewData["Title"] = "Upload File";
    var logFilesOnDisk = Model.LogFilesOnDisk.OrderByDescending(x => x.LogStartDate).ToList();
    var first = logFilesOnDisk.FirstOrDefault();
}

<div id="drop_zone" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);" class="mb-3">
    <p>Drag EPi zip file here ...</p>
</div>

<div id="message" class="alert alert-danger" style="display: none;">File not valid!</div>

<div id="result" style="display: none;">
    <br />
    <div class="card text-white bg-success mb-3">
        <div class="card-header">Parse results</div>
        <div class="card-body">
            <h5 id="summary-title" class="card-title">Summary</h5>
            <p id="summary" class="card-text"></p>
            <h5 class="card-title">Files available for download</h5>
            <p id="files" class="card-text"></p>
        </div>
    </div>
</div>

<div class="row">
    @foreach (var file in logFilesOnDisk)
    {
        var cssClass = first?.Name == file.Name ? "btn-primary" : "btn-secondary";

        <div class="col-4">
            <a href="@file.Url" target="_blank" class="btn @cssClass">@file.Name</a>
        </div>
    }
</div>

<script type="text/javascript">
    function dragOverHandler(ev) {
        ev.preventDefault();
    }

    function dropHandler(ev) {
        ev.preventDefault();

        let formData = new FormData();

        if (ev.dataTransfer.items) {
            for (let item = 0; item < ev.dataTransfer.items.length; item++) {
                if (ev.dataTransfer.items[item].kind === 'file') {
                    const file = ev.dataTransfer.items[item].getAsFile();
                    const extension = file.name.split(".").pop();
                    if(extension==="zip") {
                        formData.append("file", file);
                        $("#message").hide();
                    } else {
                        $("#message").show();
                        $("#message").html("").append("File not valid!");
                        return;
                    }
                }
            }
        }

        fetch('/api/Upload', {
            method: "POST",
            body: formData
        }).then(response => response.json())
            .then(handleErrors)
            .then((data) => {
                const resultContainer = $("#result");
                const summaryContainer = $("#summary");
                const filesContainer =  $("#files");

                $("#drop_zone").hide();
                $(summaryContainer).html("");
                $(resultContainer).show();

                $("#summary-title").html(`Summary ${data.minLogDate} - ${data.maxLogDate}`);

                for (let s = 0; s < data.summary.length; s++) {
                    const item = data.summary[s];
                    $(summaryContainer).append(item);
                }

                $(filesContainer).html("")
                    .append(createLink(data.resultAsSummaryFile))
                    .append(createLink(data.resultAsLogItemsFile))
                    .append(createLink(data.resultsAsJsonFile));

            })
            .then(() => {
                formData = null;
            });
    }

    function handleErrors(response) {
        if (!response.ok) {
            console.log(response);
            console.log(response.statusText);
            //throw Error(response.statusText);
        }
        return response;
    }

    function createLink(webFile) {
        const fileName = webFile.split(/(\\|\/)/g).pop();
        return `<a href=\"${webFile}\" class=\"text-white\" download=\"${fileName}\">${fileName}</a><br/>`;
    }
</script>

<style>
    #drop_zone {
        border: 5px dashed lightblue;
        -ms-border-radius: 15px;
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        font-size: 2rem;
    }
</style>