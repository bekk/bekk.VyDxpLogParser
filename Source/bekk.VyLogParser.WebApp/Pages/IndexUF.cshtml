@page
@model bekk.VyLogParser.WebApp.Pages.IndexUFModel

@{
    ViewData["Title"] = "Vy Log Parser";
}

<div id="drop_zone" ondrop="dropHandler(event);">
    <p>Drag one or more files to this Drop Zone ...</p>
</div>

<div id="drop_zone2" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);">
    <p>Drag one or more files to this Drop Zone ...</p>
</div>

<script type="text/javascript">
    function dragOverHandler(ev) {
        console.log('File(s) in drop zone');

        // Prevent default behavior (Prevent file from being opened)
        ev.preventDefault();
    }

    function dropHandler(ev) {
        console.log('File(s) dropped');

        // Prevent default behavior (Prevent file from being opened)
        ev.preventDefault();

        if (ev.dataTransfer.items) {
            // Use DataTransferItemList interface to access the file(s)
            for (var i = 0; i < ev.dataTransfer.items.length; i++) {
                // If dropped items aren't files, reject them
                if (ev.dataTransfer.items[i].kind === 'file') {
                    var file = ev.dataTransfer.items[i].getAsFile();
                    console.log('... file[' + i + '].name = ' + file.name);
                }
            }
        } else {
            // Use DataTransfer interface to access the file(s)
            for (var i = 0; i < ev.dataTransfer.files.length; i++) {
                console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);
            }
        }
    }

    async function uploadFile() {
        let formData = new FormData();           
        formData.append("file", fileupload.files[0]);
        await fetch('https://localhost:7256/api/Upload', {
            method: "POST", 
            body: formData
        }).then(x=>console.log(x.status));    
    }
</script>

<style>
    #drop_zone {
        border: 5px solid blue;
        width:  200px;
        height: 100px;
    }
</style>